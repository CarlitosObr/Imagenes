/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import javax.swing.JButton;

/**
 *
 * @author carli
 */
public class JInternalFrameCopiar extends javax.swing.JInternalFrame implements ActionListener{

    /**
     * Creates new form JInternalFrameCopiar
     */
    private JInternalFrameImagen internal;
    private JFramePrincipal prin;

    public JInternalFrameCopiar(JInternalFrameImagen internal,JFramePrincipal prin) {
        this.prin = prin;
        this.internal = internal;
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Xc = new javax.swing.JTextField();
        Yc = new javax.swing.JTextField();
        Copiar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        Copiar.setText("Copiar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(Xc, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(Yc, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Copiar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Xc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Yc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Copiar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Copiar;
    private javax.swing.JTextField Xc;
    private javax.swing.JTextField Yc;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        JButton cop = (JButton) e.getSource();
        if(cop.getText().equals("Copiar")){
                System.out.println("Si entr√©");
                int x = Integer.parseInt(Xc.getText());
                int y = Integer.parseInt(Yc.getText());
                BufferedImage bi = herramientas.HerramientasImagen.toBufferedImage(this.internal.getImagenOriginal());
                BufferedImage b2 = new BufferedImage(50, 50, BufferedImage.TYPE_INT_RGB);
                Color color = new Color(133, 249, 45);
                for (int j = 0; j < 50; j++) {
                    for (int m = 0; m < 50; m++) {
                        b2.setRGB(j, m, bi.getRGB(x+j, y+m));                       
                    }
                }
                Image nueva = herramientas.HerramientasImagen.toImage(b2);
                JInternalFramePegar pegatin = new JInternalFramePegar(nueva);
                pegatin.setVisible(true);
                this.prin.getjDesktopPanePrincipal().add(pegatin);    
        }else{
            System.out.println(cop.getText());
        }
    }
}
